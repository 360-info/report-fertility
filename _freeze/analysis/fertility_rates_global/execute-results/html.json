{
  "hash": "bd7488b092371ee82c2706a9dc79ad62",
  "result": {
    "markdown": "---\ntitle: Worlwide Fertility Ratews\nsubtitle: UN / World Bank Data\nformat:\n  360-analysis-html: default\nauthor: Dean Marchiori\ndate: last-modified\ncode-fold: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /home/wavedatalabs/Documents/wd/report-fertility\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n:::\n\n\nDownload (if doesnt already exist) the UN demographic excel data. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DEMOGRAPHICS\nif (!file.exists(here(\"data/raw/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_REV1.xlsx\"))) {\n    download.file(\"https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/EXCEL_FILES/1_General/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_REV1.xlsx\",\n        destfile = here(\"data/raw/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_REV1.xlsx\"), method = \"auto\"\n    )\n}\n\ndemo_raw <- read_excel(here(\"data/raw/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_REV1.xlsx\"), skip = 16, guess_max = 2000)\n\n# LOCATION DATA\nif (!file.exists(here(\"data/raw/WPP2022_F01_LOCATIONS.XLSX\"))) {\n    download.file(\"https://population.un.org/wpp/Download/Files/4_Metadata/WPP2022_F01_LOCATIONS.XLSX\",\n        destfile = here(\"data/raw/WPP2022_F01_LOCATIONS.XLSX\"), method = \"auto\"\n    )\n}\n\ncountry_raw <- read_excel(here(\"data/raw/WPP2022_F01_LOCATIONS.XLSX\"), sheet = \"DB\")\n```\n:::\n\n\nData processing \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry <- country_raw |>\n    clean_names() |>\n    filter(loc_type_name == \"Country/Area\") |>\n    mutate(geo_reg_name = fct_recode(geo_reg_name, `North America` = \"Northern America\")) |>\n    select(location, iso3_code, geo_reg_name)\n\ndemo <- demo_raw |>\n    clean_names() |>\n    select(\n        region_subregion_country_or_area,\n        iso3_alpha_code,\n        type,\n        year,\n        total_population_as_of_1_january_thousands,\n        mean_age_childbearing_years,\n        total_fertility_rate_live_births_per_woman\n    ) |>\n    filter(\n        type == \"Country/Area\",\n        region_subregion_country_or_area != \"Holy See\"\n    ) |>\n    mutate(across(\n        c(\n            total_population_as_of_1_january_thousands,\n            mean_age_childbearing_years,\n            total_fertility_rate_live_births_per_woman\n        ),\n        parse_number\n    )) |>\n    mutate(total_population_as_of_1_january = total_population_as_of_1_january_thousands * 1000) |>\n    select(\n        country = region_subregion_country_or_area,\n        iso3_code = iso3_alpha_code,\n        year,\n        population = total_population_as_of_1_january,\n        mean_age_childbearing_years,\n        total_fertility_rate = total_fertility_rate_live_births_per_woman\n    )\n```\n:::\n\n\nJoin location data, add labels and export as csv\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal <- demo |>\n    inner_join(country) |>\n    select(-location,\n        -iso3_code,\n        region = geo_reg_name\n    ) |>\n    group_by(year, region) |>\n    mutate(\n        f_rank = rank(total_fertility_rate, ties.method = \"min\"),\n        c_rank = rank(mean_age_childbearing_years, ties.method = \"min\"),\n        p_rank = rank(population, ties.method = \"min\")\n    ) |>\n    mutate(label = ifelse(\n        f_rank == min(f_rank) |\n            f_rank == max(f_rank) |\n            c_rank == min(c_rank) |\n            c_rank == max(c_rank) |\n            p_rank == max(p_rank),\n        yes = country,\n        no = \"\"\n    ))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(iso3_code)`\n```\n:::\n\n```{.r .cell-code}\nwrite_csv(final, here(\"data/final/global_fertility.csv\"))\n```\n:::\n",
    "supporting": [
      "fertility_rates_global_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}